{"mappings":"AAKA,MAAMA,EAAO,CACXC,OAAQC,SAASC,cAAc,wBAC/BC,QAASF,SAASC,cAAc,yBAChCE,OAAQH,SAASC,cAAc,wBAC/BG,OAAQJ,SAASC,cAAc,yBA8CjC,SAASI,GAAgBC,KAAEA,EAAIC,MAAEA,EAAKC,KAAEA,EAAIC,KAAEA,IAC5CX,EAAKC,OAAOW,YAAc,GAAGJ,IAC7BR,EAAKI,QAAQQ,YAAc,GAAGH,IAC9BT,EAAKK,OAAOO,YAAc,GAAGF,IAC7BV,EAAKM,OAAOM,YAAc,GAAGD,G,CAGhB,IAlDf,MAKKE,QAMEN,EAAgBO,KAAKC,kBAAkBD,KAAKE,YAE/CC,aAAY,KACTV,EAAgBO,KAAKC,kBAAkBD,KAAKE,WAAW,GAGtD,I,CAGNA,UACI,MAAME,EAAcC,KAAKC,MAE3B,OADoBN,KAAKO,WAAaH,C,CAMvCI,IAAIC,GACL,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CAGhCV,kBAAkBW,GAMnB,MAAO,C,KALSZ,KAAKQ,IAAIK,KAAKC,MAAMF,EAAQ,Q,MAC3BZ,KAAKQ,IAAIK,KAAKC,MAAMF,EAAS,MAAyB,O,KACvDZ,KAAKQ,IAAIK,KAAKC,MAAMF,EAAS,KAAoB,M,KACjDZ,KAAKQ,IAAIK,KAAKC,MAAMF,EAAS,IAAc,M,CAnC3DG,aAAYC,SAAEA,EAAQT,WAAEA,IACtBP,KAAKgB,SAAWA,EAChBhB,KAAKO,WAAaA,C,GA+CG,CACvBS,SAAU,WACVT,WAAY,IAAIF,KAAK,iBAIhBN","sources":["src/index.js"],"sourcesContent":["\n// new CountdownTimer({\n//   selector: '#timer-1',\n//   targetDate: new Date('Jul 17, 2019'),\n// });\nconst refs = {\n  daysEl: document.querySelector('[data-value= \"days\"]'),\n  hoursEl: document.querySelector('[data-value= \"hours\"]'),\n  minsEl: document.querySelector('[data-value= \"mins\"]'),\n  secsEl: document.querySelector('[data-value= \"secs\"]'),\n}\n\nclass Timer{\n  constructor({ selector, targetDate }) { \n    this.selector = selector;\n    this.targetDate = targetDate;\n  }\n     start() {     \n      //  console.log(this.targetDate);\n      //  this.getTime();\n      //  console.log(this.getTime());\n      //  this.getTimeComponents(this.getTime());\n      //  console.log(this.getTimeComponents(this.getTime()));\n       updateClockfase(this.getTimeComponents(this.getTime()));\n  \n    setInterval(() => {\n       updateClockfase(this.getTimeComponents(this.getTime()));\n      \n\n     }, 1000);\n  }  \n  //получение сколько времени осталось\n  getTime() {\n      const currentTime = Date.now();\n      const deltaTime = this.targetDate - currentTime;\n    return deltaTime;\n  }\n \n\n  //правильное отображение времени ,добавление 0\n   pad(value) {\n  return String(value).padStart(2, '0');\n}\n// формулы получения дней часов мин сек\n   getTimeComponents(time) {\n     const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n     const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n     const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n     const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n  return { days, hours, mins, secs };\n  };\n}\n\n//визуальное отображение\nfunction updateClockfase({ days, hours, mins, secs }) {\n  refs.daysEl.textContent = `${days}`;\n  refs.hoursEl.textContent = `${hours}`;\n  refs.minsEl.textContent = `${mins}`;\n  refs.secsEl.textContent = `${secs}`;\n}\n\nconst timer1 = new Timer({\n  selector: '#timer-1',\n  targetDate: new Date('Nov 1, 2022'),\n});\n\n// document.addEventListener(\"DOMContentLoaded\", timer1.start());\ntimer1.start();"],"names":["$1f0dc3b9307be026$var$refs","daysEl","document","querySelector","hoursEl","minsEl","secsEl","$1f0dc3b9307be026$var$updateClockfase","days","hours","mins","secs","textContent","start","this","getTimeComponents","getTime","setInterval","currentTime","Date","now","targetDate","pad","value","String","padStart","time","Math","floor","constructor","selector"],"version":3,"file":"index.79f0c84e.js.map"}